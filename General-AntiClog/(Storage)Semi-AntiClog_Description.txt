____________
Description:
------------

Semi-Anticlog 3.0 
mini-change-log: Extended Storage Binds to 16 and Ignore Blink

Desc: Anti Clog for any General Storage-unloader-Storage Transport

Disclaimer:
This is not specialized on one specific schematic, it more used on a variety of schems. Its something you may modify on use on the fly
Custom is always better than general, this logic focuses on somewhat easy use and adaptive block transport situations.

HowTo:
Set its Config
Bind the Destination Storage
(ex: container, vault)
Bind the unloader 
(or other config blocks if needed)
Create the transport from unloader to destination

And you have your transport!

Features/Variables:
Up to 16 receiving storageblocks (8 optimized), automatic storage and config block detection, and fast performance in a logic processor
MaxPercent - what is the target quota of items in storageblock/s, and provides a buffer as if it is too high, a clog will happen
OriginBlock - setting up what storageblock has the items, automatically detects Core when set to null
MinOriginAmount - Allows rss (resource saver) by not requesting the items from OriginBlock, essentially dont cause resource-gon
IsCluster - either treats the storageblocks as a sum, or tries to fill each storageblock with a mininum amount of items
MemoryReadLocation/MemoryWriteLocation - allows for custom config override, and chaining other Semi-AntiClog
IgnoreBlink - allows for a diffrent form of anti-clog via Origin (Origin unloader incinerator as an example)

ChangeLog:
There are now two seperate systems for storing storages, 8 are the optimized set, and the others are the array set
This is done as to not sacrifice normal performance but allowing absurd amounts of links possible
Ignore Blink has been added to allow only the "rss part" + the configuration for a Origin unloader incinerator set up as a diffrent kind of anti clog

Made By Shade (Someone's Shadow)
_____
Logs:
-----

#principles:
#you will only one schem, which only has one proc
#performance must be fast enough

#before 2.0: ? (check git commit history on SelfRequest series for info...)
#display logic added ?
#change to bit for configuration ?
#storage check diffrentiated ?

#log: version 2.0 removed display logic, reduced calling the storage check, and mini optimizations
#log: version 2.1 added massdriver as storage option (-this cant disable massdrivers on low item)
#also rss/coreitemsaver (-maybreak monos on placement)
#log: version 2.2 improved memory interactions with new potential avenues, optimized storagecheck slightly
#log: version 2.3 renamed Core into Origin, and more Vars optimization
#also Renamed into General-AntiClog soonTM if recon logic can work, Needs! optimizations,more than the 1 sec rule
#log: version 2.4 Cluster/Baseline Mode, If connnecting other anticlog procs with memcells, infinite distance!
#also some general bugfixes and blinking is optimized, need to work on QOL on the longdistance, and too many vars :/
#log: version 2.4.1 fixed invalid at 162
#log: version 2.4.2 logiced monos are used to prevent monos from randomly being deactivated
#also: ton of comments

#log: version 3.0 Extended Storage Binds to 16 (8 optimized) and Ignore Blink (allows a weird rss/reverse mode)
#reason for change is due to a revamp on how to extend storages as many as I want (currently 16, i can extend it to 32 : D)
#and to reduce processor lag when modifying if i want more...
#this is a necessary step to get reconstructors and factories in the mix...