____________
Description:
------------

|Semi-AntiClog 3.4.2
Power RSS
Message Improvemnts Overall
Added Erekir Items

HotFix: Erekir Items ID fix

Desc: Anti Clog for any General Storage-unloader-Storage Transport

Source Code: https://github.com/SomeonesShade/Mindustry---Mlog/blob/master/General-AntiClog/(Storage)Semi-AntiClogBitVersion.mlog

Disclaimer:
This is not specialized on one specific schematic, it more used on a variety of schems. Its something you may modify on use on the fly
Custom is always better than general, this logic focuses on somewhat easy use and adaptive block transport situations.
Expect this Logic to run with 0.7 seconds per main loop for 3 unloader 1 vault setup

HowTo:
Set its Config
Bind the Destination Storage
(ex: container, vault)
Bind the unloader 
(or other config blocks if needed)
Create the transport from unloader to destination

And you have your transport!

Features:
Automatic Storage and Config Block Detection
Up to 16 Receiving Storageblocks (8 Optimized)
Memory Block Support, allowing for specialized relay/long distance chaining 
    Note: (will work on docs for how this works eventually)
Internal Item and Power RSS, with Wireless/Bindless Core Detection
MessageBlock Information For Easy TroubleShooting and Information

Potential Additions: (maybe it will happen, maybe not)
    External Logic Schem For Custom Configurations
    Recontructor/Factory Support For Cluster Mode

-Shade
_____
Logs:
-----

#principles:
#you will only one schem, which only has one proc
#performance must be fast enough

#before 2.0: ? (check git commit history on SelfRequest series for info...)
#display logic added ?
#change to bit for configuration ?
#storage check diffrentiated ?

#log: version 2.0 removed display logic, reduced calling the storage check, and mini optimizations
#log: version 2.1 added massdriver as storage option (-this cant disable massdrivers on low item)
#also rss/coreitemsaver (-maybreak monos on placement)
#log: version 2.2 improved memory interactions with new potential avenues, optimized storagecheck slightly
#log: version 2.3 renamed Core into Origin, and more Vars optimization
#also Renamed into General-AntiClog soonTM if recon logic can work, Needs! optimizations,more than the 1 sec rule
#log: version 2.4 Cluster/Baseline Mode, If connnecting other anticlog procs with memcells, infinite distance!
#also some general bugfixes and blinking is optimized, need to work on QOL on the longdistance, and too many vars :/
#log: version 2.4.1 fixed invalid at 162
#log: version 2.4.2 logiced monos are used to prevent monos from randomly being deactivated
#also: ton of comments

#log: version 3.0 Extended Storage Binds to 16 (8 optimized) and Ignore Blink (allows a weird rss/reverse mode)
#reason for change is due to a revamp on how to extend storages as many as I want (currently 16, i can extend it to 32 : D)
#and to reduce processor lag when modifying if i want more...
#this is a necessary step to get reconstructors and factories in the mix...

#log: version 3.1 QOL update!
#Reverted Change on only binding logiced monos
#It now works with sorters and inverted sorters (was under my radar, sorry about that...)
#Added FindCore to decrease confusion/seperate behavior from OriginBlock
#OriginBlock added false as an input to allow disabling of Origin Behavior

#log: version 3.2 Small Changes
#Splitted Variables/Settings into their own set to help with settings some stuff
#Fixed Bugs related to storages 5 through 9

#log: version 3.3
#Message Block Support!
#Allow input of MaxValue to be a Whole Number
#Small Fixes

#Note: its now in the 0.7 sec range rn, optimizations will take root to lower it

#log: version 3.4
#Power RSS
#Message Improvemnts - Reading Cell Check and Cluster Mode Var
#Erekir Compatibility - Medium (Extend the Normal Array for now)
#3.4.1: HotFix: MessageBlock Bug, doesnt flush correctly on no Origin Mode while feeding storages
#3.4.2: HotFix: Erekir Items ID fix




Also Old Description: Might be useful for later
Features/Variables:
Up to 16 receiving storageblocks (8 optimized), automatic storage and config block detection, and fast performance in a logic processor
Includes Message Block Support for additional information

Main Configuration Variables:
MaxPercent - what is the target quota of items in storageblock/s, and provides a buffer as if it is too high, a clog will happen
OriginBlock - setting up what storageblock has the items, If set to false, disables origin functionality.
MinOriginAmount - Allows rss (resource saver) by not requesting the items from OriginBlock, essentially dont cause resource-gon
IsCluster - either treats the storageblocks as a sum, or tries to fill each storageblock with a mininum amount of items
MemoryReadLocation/MemoryWriteLocation - allows for custom config override, and chaining other Semi-AntiClog
IgnoreBlink - Removes Blinking (May get Redundant/Depreciated tbh)
FindCore - to set core as OriginBlock without binding, only works if OriginBlock is null